# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: ubuntu-latest

jobs:
  - job: project_build
    displayName: "Django Project Build"
    steps:
      - task: UsePythonVersion@0
        inputs:
          versionSpec: '3.x'
          addToPath: true
          architecture: 'x64'
      
      - script: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
        displayName: 'Install Dependencies from requirements.txt'
      
      - script: |
          python manage.py collectstatic --noinput
          python manage.py migrate
        displayName: 'Run Migrations and Collect Static Files'
      
      - task: AzureRmWebAppDeployment@5
        inputs:
          ConnectionType: 'AzureRM'
          azureSubscription: 'aks-service-connection'
          appType: 'webAppLinux'
          WebAppName: 'tamil-web-page-service'
          packageForLinux: '$(System.DefaultWorkingDirectory)/**/*.zip'
          RuntimeStack: 'PYTHON:3.9'
          DeploymentTypeLinux: 'oneDeploy'