apiVersion: apps/v1
kind: Deployment
metadata:
  name: django-deployment
  labels:
    app: django-app
spec:
  replicas: 1  # Adjust based on your needs for scaling
  selector:
    matchLabels:
      app: django-app
  template:
    metadata:
      labels:
        app: django-app
    spec:
      containers:
        - name: django-container
          image: tamilwebappacr.azurecr.io/ven-pkumar-tf/django-web-page:latest  # Replace with your correct image
          ports:
            - containerPort: 8000  # Django default port
          env:
            - name: DJANGO_SETTINGS_MODULE
              value: "tamil_class_web_page.settings"  # Replace with your settings module
          volumeMounts:
            - name: static-volume
              mountPath: /app/static  # Mount path for static files
      volumes:
        - name: static-volume
          emptyDir: {}  # Temporary storage; you might want persistent storage like PVC in production

---
apiVersion: v1
kind: Service
metadata:
  name: django-service
spec:
  selector:
    app: django-app
  ports:
    - protocol: TCP
      port: 8000      # The port exposed by the service
      targetPort: 8000  # The port the container listens on
  type: LoadBalancer   # Expose service externally (requires cloud provider or use NodePort for local setups)

